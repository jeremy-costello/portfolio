export const projects = [
  {
    id: 1,
    title: "Geospatial RAG Chatbot Agent",
    description: "Built an agentic RAG chatbot to discover and visualize geospatial data on a 2D map.",
    details: "This project leverages Docker Compose to deploy a scalable microservices chatbot with the Llama3.2-3B and Llama3.1-8B LLMs served through Ollama.",
    tech: ["Python", "Docker", "Ollama", "Flask", "REST APIs", "TS/JS", "React", "Leaflet"],
    thumbnailUrl: "/projects/rag-geo-chatbot/thumbnail.jpg",
    mediaUrls: ["/projects/rag-geo-chatbot/demo-video.mp4"],
    mediaType: "video",
    codeNote: "Proprietary - not publicly available",
  },
  {
    id: 2,
    title: "Terrain Segmentation for Robotic Navigation",
    description: "Trained an end-to-end terrain segmentation system for autonomous vehicles.",
    details: "This project leverages a fine-tuned SegFormer model for terrain segmentation. CVAT and Meta's Segment Anything Model are used to semi-autonomously annotate every 10th second of captured video, and remaining videos frames are automatically annotated using SegGPT. Model is deployed to a Jetson AGX Orin using TensorRT, ONNX, and Isaac ROS. The system runs at 50 FPS with a 90% validation accuracy using time-series cross-validation.",
    tech: ["Python", "PyTorch", "Hugging Face", "OpenCV", "MLflow", "WandB", "ONNX", "TensorRT", "ROS2", "Isaac ROS", "Docker", "CMake", "C++"],
    thumbnailUrl: "/projects/sem-seg/thumbnail.jpg",
    mediaUrls: ["/projects/sem-seg/before.jpg", "/projects/sem-seg/after.jpg"],
    mediaType: "image",
    codeNote: "Proprietary - not publicly available",
  },
  {
    id: 3,
    title: "In-Browser RAG Chatbot",
    description: "Retrieval-augmented generation chatbot running completely in the browser.",
    details: "Built a fully in-browser RAG chatbot. Semantic search using PGlite and pgvector. Quantized LLM inference using Wllama. Project code is for my personal website, which this is a small part of.",
    tech: ["React", "TS/JS", "Wllama", "PostgreSQL", "PGlite", "pgvector"],
    thumbnailUrl: "/projects/rag-chat-personal/thumbnail.jpg",
    mediaUrls: ["/projects/rag-chat-personal/demo-video.mp4"],
    mediaType: "video",
    demoLink: "https://jeremy-costello.github.io/chat",
    codeLink: "https://github.com/jeremy-costello/jeremy-costello.github.io"
  },
  {
    id: 4,
    title: "LiDAR Algorithm Comparison",
    description: "Compared the performance of various LiDAR-based ground plane estimation algorithms.",
    details: "Modified and built various ground plane estimation algorithms. Wrote a Dockerfile and Bash script using ffmpeg to record and sync outputs.",
    tech: ["Bash", "ffmpeg", "ROS2", "Docker", "CMake", "C++"],
    thumbnailUrl: "/projects/ros-lidar/thumbnail.jpg",
    mediaUrls: ["/projects/ros-lidar/demo-video.mp4"],
    mediaType: "video",
    codeNote: "Proprietary - not publicly available",
  },
  {
    id: 5,
    title: "3D Terrain and Building Generation",
    description: "Docker pipeline to generate 3D quantized mesh terrain and 3D building tiles.",
    details: "Built a Docker pipeline to generate 3D quanitzed mesh terrain and 3D building tiles. Based on a bounding box, downloads digital elevation map from one of various STAC APIs and downloads building footprints from Overture Maps. Generates 3D building tiles from a created PostGIS database, generates 3D quantized mesh terrain, and serves the outputs through nginx on a CesiumJS globe.",
    tech: ["Python", "Bash", "Docker", "nginx", "PostgreSQL", "PostGIS", "CesiumJS"],
    thumbnailUrl: "/projects/cesium/thumbnail.jpg",
    mediaType: "component",
    codeLink: "https://github.com/jeremy-costello/stac-to-3d",
  },
    {
    id: 6,
    title: "OGC API - DGGS Draft Semantic Search",
    description: "Semantic search app running completely in the browser.",
    details: "Built a fully in-browser semantic search engine to help me learn about the OGC API - DGGS draft specification. It may take a little while for the project demo to load, as it has to download the embedding model (~85MB).",
    tech: ["Python", "Llama.cpp", "React", "TS/JS", "Wllama", "PostgreSQL", "PGlite", "pgvector", "Beautiful Soup"],
    thumbnailUrl: "/projects/dggs-draft-search/thumbnail.jpg",
    mediaType: "image",
    mediaUrls: ["/projects/dggs-draft-search/demo-picture.jpg"],
    demoLink: "https://jeremy-costello.github.io/dggs-draft-search",
    codeLink: "https://github.com/jeremy-costello/dggs-draft-search",
  },
];
